{"ast":null,"code":"import{configureStore,combineReducers}from'@reduxjs/toolkit';import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';import authReducer from'./slices/authSlice';const persistConfig={key:'root',storage,whitelist:['auth']// only auth will be persisted\n};const rootReducer=combineReducers({auth:authReducer// Add other reducers here\n});const persistedReducer=persistReducer(persistConfig,rootReducer);export const store=configureStore({reducer:persistedReducer,middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{ignoredActions:['persist/PERSIST','persist/REHYDRATE']}})});export const persistor=persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","persistStore","persistReducer","storage","authReducer","persistConfig","key","whitelist","rootReducer","auth","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/Users/kumar/Desktop/broad/frontend/src/store/index.ts"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authReducer from './slices/authSlice';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['auth'] // only auth will be persisted\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  // Add other reducers here\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type AppDispatch = typeof store.dispatch;"],"mappings":"AAAA,OAASA,cAAc,CAAEC,eAAe,KAAQ,kBAAkB,CAClE,OAASC,YAAY,CAAEC,cAAc,KAAQ,eAAe,CAC5D,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAE5C,KAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXH,OAAO,CACPI,SAAS,CAAE,CAAC,MAAM,CAAE;AACtB,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGR,eAAe,CAAC,CAClCS,IAAI,CAAEL,WACN;AACF,CAAC,CAAC,CAIF,KAAM,CAAAM,gBAAgB,CAAGR,cAAc,CAACG,aAAa,CAAEG,WAAW,CAAC,CAEnE,MAAO,MAAM,CAAAG,KAAK,CAAGZ,cAAc,CAAC,CAClCa,OAAO,CAAEF,gBAAgB,CACzBG,UAAU,CAAGC,oBAAoB,EAC/BA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAAC,iBAAiB,CAAE,mBAAmB,CACzD,CACF,CAAC,CACL,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,SAAS,CAAGhB,YAAY,CAACU,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}